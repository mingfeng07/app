** DRRIVE EPOCH **;
/**************************************************************************************************
Project/Study/Analysis: BGB3111_304
SAS version           : 9.4
Envirnment            : val
Date of last update   : 28may2020
***************************************************************************************************
Program name          : ms_sdtmqc_epoch.sas
Program description   : derive epoch for sdtm
Original programmer   : Jinling Li
Current Programmer    : Jinling Li
***************************************************************************************************
Input dataset or file : 
Macro called/includes : 
Output dataset or file: 
***************************************************************************************************
Parameters:
 ***  DATINOUT = INPUT DATASET NAME; OUTPUT DATASET WITH SAME NAME IS CREATED (required)
 ***  STRDTC = EVENT START DATE (required)
 ***  ENDDTC = EVENT END DATE (required)
 ***  BLFL = BASELINE FLAG (optional)
 ***  TPT = TIMEPOINT VARIABLE(optional)
***************************************************************************************************
Modification history
---------------------------------------------------------------------------------------------------
SEQ                   : 1
Date                  : 28May2020
Programmer            : Jinling Li
Change description    : adapted from 210's VEPOCH.SAS(DEVENDRA ASHTAPUTRE)
***************************************************************************************************/

%MACRO ms_sdtmqc_epoch(DATINOUT=, STRDTC=, ENDDTC=, BLFL=, TPT=);

	%local SUBJ pr dom;

	%LET SUBJ=BGB-3111-AU-003-S1008-2-74;
	%LET PR=*;

	/* WHEN THERE IS NO END DATE IN THE INPUT DATASET */
	%IF &ENDDTC= %THEN
		%DO;
			%LET ENDDTC=TMPDTC;
		%END;

	/* WHEN THERE IS NO BLFL VARIABLE IN THE INPUT DATASET */
	%IF &BLFL= %THEN
		%DO;
			%LET BLFL=TMPBLFL;
		%END;

	/* WHEN THERE IS NO BLFL VARIABLE IN THE INPUT DATASET */
	%IF &TPT= %THEN
		%DO;
			%LET TPT=TMPTPT;
		%END;

	/* USE DOMAIN AS MACRO VARIABLE IN THE MACRO CALL AND THEN DEFINE DATES AND TPT VARIABLES 
	IN THE MACRO ITSELF */
	%LET DOM=%SUBSTR(&STRDTC.,1,2);

	DATA INSERT;
		TMPBLFL='';
		TMPTPT='';
		TMPDTC=' ';

		*TEMP="&DOM.";
	RUN;

	/* EPOCH DERIVATION */
	DATA SE1;
		SET SDTM.SE (KEEP=USUBJID SESTDTC SEENDTC EPOCH SESEQ ENCODING=ANY);
		FORMAT SESTDTN SEENDTN YYMMDD10.;

		/* INCOMPLETE SESTDTC */
		IF LENGTH(SESTDTC)=7 THEN
			SESTDTC=STRIP(SESTDTC)||'-01';

		IF LENGTH(SEENDTC)=7 THEN
			SEENDTC=STRIP(SEENDTC)||'-01';
		SESTDTN=INPUT(SUBSTR(SESTDTC,1,10),YYMMDD10.);
		SEENDTN=INPUT(SUBSTR(SEENDTC,1,10),YYMMDD10.);
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ.";

	DATA SE_SCRONLY;
		MERGE SE1 (IN=A WHERE=(EPOCH='SCREENING')) SE1 (IN=B WHERE=(EPOCH='TREATMENT'));
		BY USUBJID;

		IF A AND NOT B;

		IF SESTDTC > ' ';
	RUN;

	DATA &DATINOUT;
		SET INSERT &DATINOUT;
		FORMAT ENDDTN STARTDTN YYMMDD10.;

		IF LENGTH(&STRDTC) = 10 THEN
			DO;
				STARTDTN=INPUT(SUBSTR(&STRDTC,1,10),YYMMDD10.);
			END;
		ELSE IF LENGTH(&STRDTC) = 16 THEN
			DO;
				STARTDTN=INPUT(SUBSTR(SCAN(&STRDTC,1,'T'),1,10),YYMMDD10.);
			END;

		IF LENGTH(&ENDDTC) = 10 THEN
			ENDDTN=INPUT(SUBSTR(&ENDDTC,1,10),YYMMDD10.);
		ELSE &ENDDTC = '';

		IF &BLFL ^= '' THEN
			BFL=&BLFL;
		ELSE BFL = '';

		IF &TPT ^= '' THEN
			TTPT=&TPT;
		ELSE TTPT = '';

		IF STUDYID='' THEN
			DELETE;
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ.";
	&PR. var USUBJID &STRDTC &ENDDTC STARTDTN ENDDTN;

	PROC SQL;
		CREATE TABLE _EPOCH AS
			SELECT DOMAIN, USUBJID, &STRDTC, &ENDDTC, STARTDTN, ENDDTN, BFL, TTPT FROM &DATINOUT WHERE &STRDTC > ' ' 
				ORDER BY USUBJID, &STRDTC;
		CREATE TABLE SE2 AS
			SELECT DISTINCT USUBJID,SESTDTC,SESTDTN,SEENDTC,SEENDTN,EPOCH,SESEQ FROM SE1 WHERE SESTDTC > ' ';
		CREATE TABLE EPOCH_SCR AS
			SELECT A.*, B.EPOCH, B.SESTDTC, B.SESTDTN, B.SEENDTC,B.SEENDTN, B.SESEQ FROM _EPOCH AS A LEFT JOIN SE2 AS B
				ON A.USUBJID = B.USUBJID 
				AND (((SESTDTN <= STARTDTN <= SEENDTN) OR (SESTDTN <= STARTDTN AND SEENDTC = '')) OR (A.BFL='Y'))
				/*AND ((ENDDTN > 0 AND ENDDTN <= SEENDTN AND SEENDTN > 0) OR (ENDDTN = .))*/
		HAVING B.EPOCH='SCREENING';

		%IF &DOM=EC OR &DOM=PR OR &DOM=EX OR &DOM=EG OR &DOM=VS %THEN
			%DO;
				CREATE TABLE EPOCH_SCR AS
					SELECT A.*, B.EPOCH, B.SESTDTC, B.SESTDTN, B.SEENDTC,B.SEENDTN, B.SESEQ FROM _EPOCH AS A LEFT JOIN SE2 AS B
						ON A.USUBJID = B.USUBJID 
						AND (((SESTDTN <= STARTDTN < SEENDTN) OR (SESTDTN <= STARTDTN AND SEENDTC = '')) OR (A.BFL='Y'))
					HAVING B.EPOCH='SCREENING';
			%END;

		CREATE TABLE EPOCH_TRT AS
			SELECT A.*, B.EPOCH, B.SESTDTC,B.SESTDTN, B.SEENDTC,B.SEENDTN, B.SESEQ FROM _EPOCH AS A LEFT JOIN SE2 AS B
				ON A.USUBJID = B.USUBJID AND ((SESTDTN <= STARTDTN <= SEENDTN) OR (SESTDTN <= STARTDTN AND SEENDTC = ''))
				/*AND (((SESTDTN <= ENDDTN <= SEENDTN) OR (SESTDTN <= ENDDTN AND SEENDTC = '')) OR (ENDDTN = .))*/
		HAVING B.EPOCH='TREATMENT' AND A.BFL='';

		CREATE TABLE EPOCH_FUP AS
			SELECT A.*, B.EPOCH, B.SESTDTC,B.SESTDTN, B.SEENDTC,B.SEENDTN, B.SESEQ FROM _EPOCH AS A LEFT JOIN SE2 AS B
				ON A.USUBJID = B.USUBJID AND ((SESTDTN <= STARTDTN <= SEENDTN)	OR (SESTDTN <= STARTDTN AND SEENDTC = ''))
			HAVING B.EPOCH='FOLLOW-UP';

		CREATE TABLE EPOCH_SCRONLY AS 
			SELECT A.*, B.EPOCH, B.SESTDTC, B.SESTDTN, B.SEENDTC,B.SEENDTN, B.SESEQ FROM _EPOCH AS A RIGHT JOIN SE_SCRONLY AS B
				ON A.USUBJID = B.USUBJID AND . < STARTDTN = SEENDTN
			HAVING STARTDTN ^= .;
	QUIT;

	PROC SORT DATA=EPOCH_SCR NODUPKEY;
		BY USUBJID &STRDTC &ENDDTC EPOCH SESEQ;
		TITLE 'SCREENING';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ.";
	&PR. VAR USUBJID &STRDTC STARTDTN BFL TTPT EPOCH SESTDTC SEENDTC SESEQ;

	PROC SORT DATA=EPOCH_TRT NODUPKEY;
		BY USUBJID &STRDTC &ENDDTC EPOCH SESEQ;
		TITLE 'TREATMENT';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ.";
	&PR. VAR USUBJID &STRDTC STARTDTN BFL TTPT EPOCH SESTDTC SEENDTC SESEQ;

	PROC SORT DATA=EPOCH_FUP NODUPKEY;
		BY USUBJID &STRDTC &ENDDTC EPOCH SESEQ;
		TITLE 'FOLLOW-UP';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ.";
	&PR. VAR USUBJID &STRDTC STARTDTN BFL TTPT EPOCH SESTDTC SEENDTC SESEQ;

	DATA EPOCH;
		SET EPOCH_SCR EPOCH_TRT EPOCH_FUP EPOCH_SCRONLY;

		/* ADDITIONAL PROCESSING FOR VS WHERE SESTDTN > STARTDTN AND EPOCH='SCREENING'*/
		IF SESTDTN > STARTDTN AND EPOCH='SCREENING' THEN
			EPOCH='';
	RUN;

	PROC SORT DATA=EPOCH;
		BY USUBJID &STRDTC &ENDDTC TTPT SESEQ EPOCH;
		TITLE 'ALL DATA TOGETHER';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ." AND &STRDTC='2016-03-02T08:35';
	&PR. VAR USUBJID &STRDTC STARTDTN BFL TTPT EPOCH SESTDTC SEENDTC SESEQ;

	DATA EPOCH;
		SET EPOCH;
		BY USUBJID &STRDTC &ENDDTC TTPT  SESEQ EPOCH;

		*IF FIRST.&ENDDTC;
		IF FIRST.TTPT;
		TITLE 'ALL DATA TOGETHER POST FIRST.';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ." AND &STRDTC='2016-03-02T08:35';
	&PR. VAR USUBJID &STRDTC STARTDTN BFL TTPT EPOCH SESTDTC SEENDTC SESEQ;

	/* CHECK WITH LAST SCREENING DATE */
	PROC SQL;
		CREATE TABLE MAXSCR AS
			SELECT DISTINCT USUBJID, MAX(&STRDTC) AS MAXSCRC, MAX(STARTDTN) AS MAXSCRN
				FROM EPOCH
					WHERE EPOCH='SCREENING'
						GROUP BY USUBJID
							ORDER BY USUBJID;
	QUIT;

	&PR.  PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ.";

	DATA EPOCH;
		MERGE EPOCH (IN=A) MAXSCR (IN=B);
		BY USUBJID;

		IF A;
	RUN;

	DATA EPOCH;
		SET EPOCH;
		BY USUBJID;

		IF '' < &STRDTC < MAXSCRC AND EPOCH='TREATMENT' AND INDEX(TTPT, 'POST') = 0 THEN
			EPOCH='SCREENING';

		%IF &DOM^=EX AND &DOM^=PR AND &DOM^=EC %THEN
			%DO;
				IF TTPT = ' ' AND STARTDTN<=SESTDTN  AND EPOCH='TREATMENT' THEN
					EPOCH='SCREENING';
			%END;
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ." AND &STRDTC='2016-03-02T08:35';
	&PR. VAR USUBJID &STRDTC STARTDTN MAXSCRC BFL TTPT EPOCH SESTDTC SEENDTC SESEQ;

	*PROC CONTENTS;
	/*ENDSAS;*/
	PROC SORT DATA=EPOCH;
		* (KEEP=USUBJID &STRDTC &ENDDTC EPOCH );
		BY USUBJID &STRDTC &ENDDTC;
		TITLE 'FINAL EPOCH DATA';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ." AND &STRDTC='2016-03-02T08:35';
	&PR. var USUBJID &STRDTC &ENDDTC EPOCH BFL TTPT;

	/*proc contents; proc freq; tables USUBJID*&STRDTC*&ENDDTC / list missing out=temp; *proc print; *where count > 1;
	tables USUBJID*&STRDTC*&ENDDTC*TTPT*SEENDTN*EPOCH / list missing; where usubjid='BGB-3111-AU-003-S4206-2-275' and vsdtc='2017-11-03';*/
	PROC SORT DATA=&DATINOUT;
		*(DROP=ENDDTN STARTDTN BFL TTPT);
		BY USUBJID &STRDTC &ENDDTC;
		TITLE "FINAL &DATINOUT DATA";
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ." AND &STRDTC='2016-03-02T08:35';
	&PR. var USUBJID &STRDTC &ENDDTC  vsblfl vstpt;

	*PROC CONTENTS;
	*proc contents;
	DATA &DATINOUT;
		MERGE &DATINOUT (IN=A) EPOCH (IN=B KEEP=USUBJID &STRDTC &ENDDTC EPOCH STARTDTN ENDDTN SESTDTN SEENDTN BFL TTPT);
		BY USUBJID &STRDTC &ENDDTC;

		IF A;
		TITLE 'FINAL DATA';
	RUN;

	&PR. PROC PRINT;
	&PR. WHERE USUBJID="&SUBJ." AND &STRDTC='2016-03-02T08:35';
	&PR. var VSTESTCD STARTDTN ENDDTN SESTDTN SEENDTN TTPT BFL vsblfl vstpt EPOCH;

	DATA &DATINOUT;
		SET &DATINOUT;
		BY USUBJID &STRDTC &ENDDTC;

		/* FOR USUBJID=BGB-3111-AU-003-S1008-2-74 DATA ISSUE WITH SAME DATE& TIME SPLIT AS SCREENING & TREATMENT */
		IF INDEX(TTPT, 'POST-DOSE') ^= 0 AND EPOCH='SCREENING' AND . < STARTDTN = SEENDTN THEN
			EPOCH='TREATMENT';
	RUN;

	PROC FREQ;
		TABLES USUBJID*EPOCH*STARTDTN*SESTDTN*SEENDTN*TTPT*BFL / LIST MISSING;
		WHERE INDEX(TTPT, 'POST-DOSE') > 0 AND EPOCH='SCREENING' AND . < STARTDTN = SEENDTN; /*ENDSAS;*/

	PROC FREQ;
		TABLES USUBJID*&STRDTC*&ENDDTC*EPOCH / LIST MISSING;
		WHERE EPOCH='';
		TITLE 'DETAILS ABOUT MISSING EPOCH';
	RUN;

	DATA _NULL_;
		SET &DATINOUT;
		TITLE '';

		IF EPOCH='' THEN
			PUT "USER MESSAGE - EPOCH MISSING FOR USUBJID=" USUBJID= "&STRDTC=" &STRDTC "&ENDDTC=" &ENDDTC;
	RUN;

%MEND ms_sdtmqc_epoch;
